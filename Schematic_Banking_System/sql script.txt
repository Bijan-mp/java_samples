CREATE TABLE  "ACCOUNT_REQUEST" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"ACCOUNT_TYPE" NVARCHAR2(40) NOT NULL ENABLE, 
	"CHECKED" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "ACCOUNT_REQUEST_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "CUSTOMER" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" NVARCHAR2(40) NOT NULL ENABLE, 
	"FAMILY" NVARCHAR2(40) NOT NULL ENABLE, 
	"FATHER_NAME" NVARCHAR2(40) NOT NULL ENABLE, 
	"NATIONAL_ID" NUMBER NOT NULL ENABLE, 
	"BIRTH_CERTIFICATE_ID" NUMBER NOT NULL ENABLE, 
	"BIRTH_DATE" NUMBER NOT NULL ENABLE, 
	"BIRTH_PLACE" NVARCHAR2(40) NOT NULL ENABLE, 
	"DOCUMENT_PICTURE_ADDRESS" VARCHAR2(100) NOT NULL ENABLE, 
	 CONSTRAINT "CUSTOMER_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "AUTHENTICATION_INFORMATION" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(100) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(32) NOT NULL ENABLE, 
	 CONSTRAINT "AUTHENTICATION_INFORMATION_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "AUTHENTICATION_INFORMATION_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES  "CUSTOMER" ("ID") ENABLE
   )
/
CREATE TABLE  "BRANCH" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CITY" NVARCHAR2(40) NOT NULL ENABLE, 
	"ADDRESS" NVARCHAR2(400) NOT NULL ENABLE, 
	"BRANCH_NAME" NVARCHAR2(40) NOT NULL ENABLE, 
	 CONSTRAINT "BRANCH_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "CHECKING_ACCOUNT" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"MONEY" NUMBER NOT NULL ENABLE, 
	"OPENING_DATE" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"ACCOUNT_TYPE_ID" NUMBER, 
	"BRANCH_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "CHECKING_ACCOUNT_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "CHECKING_ACCOUNT_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES  "CUSTOMER" ("ID") ENABLE
   )
/
CREATE TABLE  "BANK_CARD" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(32) NOT NULL ENABLE, 
	"INTERNET_PASSWORD" VARCHAR2(32) NOT NULL ENABLE, 
	"CVV2" NUMBER NOT NULL ENABLE, 
	"EXPIRE_DATE" NUMBER NOT NULL ENABLE, 
	"BRANCH_ID" NUMBER NOT NULL ENABLE, 
	"CHECKING_ACCOUNT_ID" NUMBER NOT NULL ENABLE, 
	"BLOCKED_FLAG" NUMBER, 
	 CONSTRAINT "BANK_CARD_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "BANK_CARD_FK" FOREIGN KEY ("BRANCH_ID")
	  REFERENCES  "BRANCH" ("ID") ENABLE, 
	 CONSTRAINT "BANK_CARD_FK2" FOREIGN KEY ("CHECKING_ACCOUNT_ID")
	  REFERENCES  "CHECKING_ACCOUNT" ("ID") ENABLE
   )
/
CREATE TABLE  "BANK_CHECK" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"PAPER_MAX_NUMBER" NUMBER NOT NULL ENABLE, 
	"CHECKING_ACCOUNT_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "BANK_CHECK_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "BANK_CHECK_FK" FOREIGN KEY ("CHECKING_ACCOUNT_ID")
	  REFERENCES  "CHECKING_ACCOUNT" ("ID") ENABLE
   )
/
CREATE TABLE  "BANK_CHECK_REQUEST" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"REQUEST_DATE" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"CHECKING_ACCOUNT_ID" NUMBER NOT NULL ENABLE, 
	"CHECKED_FLAG" NUMBER, 
	 CONSTRAINT "BANK_CHECK_REQUEST_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "BANK_CHECK_REQUEST_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES  "CUSTOMER" ("ID") ENABLE, 
	 CONSTRAINT "BANK_CHECK_REQUEST_FK2" FOREIGN KEY ("CHECKING_ACCOUNT_ID")
	  REFERENCES  "CHECKING_ACCOUNT" ("ID") ENABLE
   )
/
CREATE TABLE  "BANK_TRANSACTION" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"DESCRIPTION" NUMBER NOT NULL ENABLE, 
	"TITLE" NVARCHAR2(100) NOT NULL ENABLE, 
	"TRANSACTION_DATE" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "BANK_TRANSACTION_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "BILL" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"PAY_ID" NUMBER NOT NULL ENABLE, 
	"PRICE" NUMBER NOT NULL ENABLE, 
	"TYPE" NVARCHAR2(40) NOT NULL ENABLE, 
	"PAYED_FLAG" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "BILL_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "CHECKING_ACCOUNT_TYPE" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"DESCRIPTION" NVARCHAR2(400), 
	"TYPE_NAME" NVARCHAR2(40) NOT NULL ENABLE, 
	 CONSTRAINT "CHECKING_ACCOUNT_TYPE_PK" PRIMARY KEY ("ID") ENABLE
   )
/
CREATE TABLE  "CHECK_PAPER" 
   (	"BANK_CHECK_ID" NUMBER NOT NULL ENABLE, 
	"CHECK_PAPER_ID" NUMBER NOT NULL ENABLE, 
	"MONEY" NUMBER, 
	"RECEIVE_DATE" NUMBER, 
	"PASSED_FLAG" NUMBER, 
	"RETURNED_FLAG" NUMBER, 
	"FOR_PERSON" NVARCHAR2(40), 
	"RECEIVER_NAME" NVARCHAR2(40), 
	"RECEIVER_FAMILY" NVARCHAR2(40), 
	"BARRED_FLAG" NUMBER, 
	"RECEIVER_NATIONAL_ID" NUMBER, 
	 CONSTRAINT "CHECK_PAPER_PK" PRIMARY KEY ("BANK_CHECK_ID", "CHECK_PAPER_ID") ENABLE, 
	 CONSTRAINT "CHECK_PAPER_FK" FOREIGN KEY ("BANK_CHECK_ID")
	  REFERENCES  "BANK_CHECK" ("ID") ENABLE
   )
/
CREATE TABLE  "CUSTOMER_INFORMATION" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CITY" NVARCHAR2(40) NOT NULL ENABLE, 
	"ADDRESS" NVARCHAR2(400) NOT NULL ENABLE, 
	"PHONE" NUMBER NOT NULL ENABLE, 
	"CELLPHONE" NUMBER, 
	"EMAIL" NVARCHAR2(100), 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"POSTAL_CODE" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "CUSTOMER_INFORMATION_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "CUSTOMER_INFORMATION_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES  "CUSTOMER" ("ID") ENABLE
   )
/
CREATE TABLE  "DEPOSIT_ACCOUNT" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"MONEY" NUMBER NOT NULL ENABLE, 
	"OPENING_DATE" NUMBER NOT NULL ENABLE, 
	"DEPOSIT_ACCOUNT_TYPE_ID" NUMBER NOT NULL ENABLE, 
	"CHECKING_ACCOUNT_ID" NUMBER NOT NULL ENABLE, 
	"CUSTOMER_ID" NUMBER NOT NULL ENABLE, 
	"BRANCH_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "DEPOSIT_ACCOUNT_PK" PRIMARY KEY ("ID") ENABLE, 
	 CONSTRAINT "DEPOSIT_ACCOUNT_FK" FOREIGN KEY ("CHECKING_ACCOUNT_ID")
	  REFERENCES  "CHECKING_ACCOUNT" ("ID") ENABLE, 
	 CONSTRAINT "DEPOSIT_ACCOUNT_FK2" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES  "CUSTOMER" ("ID") ENABLE, 
	 CONSTRAINT "DEPOSIT_ACCOUNT_FK3" FOREIGN KEY ("BRANCH_ID")
	  REFERENCES  "BRANCH" ("ID") ENABLE
   )
/
CREATE TABLE  "DEPOSIT_ACCOUNT_TYPE" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" NVARCHAR2(40) NOT NULL ENABLE, 
	"DURATION" NUMBER NOT NULL ENABLE, 
	"ANNUAL_INTEREST_PERCENT" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "DEPOSIT_ACCOUNT_TYPE_PK" PRIMARY KEY ("ID") ENABLE
   )
/
Rem No function found to generate DDL.
CREATE UNIQUE INDEX  "ACCOUNT_REQUEST_PK" ON  "ACCOUNT_REQUEST" ("ID")
/
CREATE UNIQUE INDEX  "AUTHENTICATION_INFORMATION_PK" ON  "AUTHENTICATION_INFORMATION" ("ID")
/
CREATE UNIQUE INDEX  "BANK_CARD_PK" ON  "BANK_CARD" ("ID")
/
CREATE UNIQUE INDEX  "BANK_CHECK_PK" ON  "BANK_CHECK" ("ID")
/
CREATE UNIQUE INDEX  "BANK_CHECK_REQUEST_PK" ON  "BANK_CHECK_REQUEST" ("ID")
/
CREATE UNIQUE INDEX  "BANK_TRANSACTION_PK" ON  "BANK_TRANSACTION" ("ID")
/
CREATE UNIQUE INDEX  "BILL_PK" ON  "BILL" ("ID")
/
CREATE UNIQUE INDEX  "BRANCH_PK" ON  "BRANCH" ("ID")
/
CREATE UNIQUE INDEX  "CHECKING_ACCOUNT_PK" ON  "CHECKING_ACCOUNT" ("ID")
/
CREATE UNIQUE INDEX  "CHECKING_ACCOUNT_TYPE_PK" ON  "CHECKING_ACCOUNT_TYPE" ("ID")
/
CREATE UNIQUE INDEX  "CHECK_PAPER_PK" ON  "CHECK_PAPER" ("BANK_CHECK_ID", "CHECK_PAPER_ID")
/
CREATE UNIQUE INDEX  "CUSTOMER_INFORMATION_PK" ON  "CUSTOMER_INFORMATION" ("ID")
/
CREATE UNIQUE INDEX  "CUSTOMER_PK" ON  "CUSTOMER" ("ID")
/
CREATE UNIQUE INDEX  "DEPOSIT_ACCOUNT_PK" ON  "DEPOSIT_ACCOUNT" ("ID")
/
CREATE UNIQUE INDEX  "DEPOSIT_ACCOUNT_TYPE_PK" ON  "DEPOSIT_ACCOUNT_TYPE" ("ID")
/
Rem No package found to generate DDL.
Rem No procedure found to generate DDL.
 CREATE SEQUENCE   "ACCOUNT_REQUEST_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "AUTHENTICATION_INFORMATIO_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BANK_CARD_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 6037111122223333 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BANK_CHECK_REQUEST_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BANK_CHECK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 15222 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BANK_TRANSACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BILL_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "BRANCH_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "CHECKING_ACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1005304021 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "CHECKING_ACCOUNT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "CUSTOMER_INFORMATION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "CUSTOMER_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "DEPOSIT_ACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 4440371011 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "DEPOSIT_ACCOUNT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
 CREATE SEQUENCE   "TRANSACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE
/
Rem No synonym found to generate DDL.
CREATE OR REPLACE TRIGGER  "BI_ACCOUNT_REQUEST" 
  before insert on "ACCOUNT_REQUEST"               
  for each row  
begin   
    select "ACCOUNT_REQUEST_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_ACCOUNT_REQUEST" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_AUTHENTICATION_INFORMATION" 
  before insert on "AUTHENTICATION_INFORMATION"               
  for each row  
begin   
    select "AUTHENTICATION_INFORMATIO_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_AUTHENTICATION_INFORMATION" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BANK_CARD" 
  before insert on "BANK_CARD"               
  for each row  
begin   
    select "BANK_CARD_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BANK_CARD" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BANK_CHECK" 
  before insert on "BANK_CHECK"               
  for each row  
begin   
    select "BANK_CHECK_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BANK_CHECK" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BANK_CHECK_REQUEST" 
  before insert on "BANK_CHECK_REQUEST"               
  for each row  
begin   
    select "BANK_CHECK_REQUEST_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BANK_CHECK_REQUEST" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BANK_TRANSACTION" 
  before insert on "BANK_TRANSACTION"               
  for each row  
begin   
    select "BANK_TRANSACTION_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BANK_TRANSACTION" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BILL" 
  before insert on "BILL"               
  for each row  
begin   
    select "BILL_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BILL" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_BRANCH" 
  before insert on "BRANCH"               
  for each row  
begin   
    select "BRANCH_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_BRANCH" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_CHECKING_ACCOUNT" 
  before insert on "CHECKING_ACCOUNT"               
  for each row  
begin   
    select "CHECKING_ACCOUNT_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_CHECKING_ACCOUNT" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_CHECKING_ACCOUNT_TYPE" 
  before insert on "CHECKING_ACCOUNT_TYPE"               
  for each row  
begin   
    select "CHECKING_ACCOUNT_TYPE_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_CHECKING_ACCOUNT_TYPE" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_CUSTOMER" 
  before insert on "CUSTOMER"               
  for each row  
begin   
    select "CUSTOMER_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_CUSTOMER" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_CUSTOMER_INFORMATION" 
  before insert on "CUSTOMER_INFORMATION"               
  for each row  
begin   
    select "CUSTOMER_INFORMATION_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_CUSTOMER_INFORMATION" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_DEPOSIT_ACCOUNT" 
  before insert on "DEPOSIT_ACCOUNT"               
  for each row  
begin   
    select "DEPOSIT_ACCOUNT_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_DEPOSIT_ACCOUNT" ENABLE
/
CREATE OR REPLACE TRIGGER  "BI_DEPOSIT_ACCOUNT_TYPE" 
  before insert on "DEPOSIT_ACCOUNT_TYPE"               
  for each row  
begin   
    select "DEPOSIT_ACCOUNT_TYPE_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_DEPOSIT_ACCOUNT_TYPE" ENABLE
/
Rem No view found to generate DDL.